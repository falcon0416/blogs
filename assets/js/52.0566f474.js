(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{450:function(t,e,a){"use strict";a.r(e);var r=a(2),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"vue更新数据流程流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue更新数据流程流程"}},[t._v("#")]),t._v(" Vue更新数据流程流程")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://s2.loli.net/2023/02/07/FSM7TiVkyYul1jN.png",alt:"示意图"}})]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Compiler 解析模板成虚拟dom ( render 函数 createElement 就是直接生成虚拟dom )")])]),t._v(" "),e("li",[e("p",[t._v("Observer 发现数据改变 通知 Watcher")])]),t._v(" "),e("li",[e("p",[t._v("Watcher 通知 Compiler 重新解析模板成虚拟dom")])]),t._v(" "),e("li",[e("p",[t._v("diff 虚拟 dom 对改变的部分进行渲染")])])]),t._v(" "),e("blockquote",[e("p",[t._v("Tip: 当使用 vue-loader 或 vueify 的时候，*.vue 文件内部的模板会在构建时预编译成 JavaScript ( 编译成 render + createElement )")])]),t._v(" "),e("h2",{attrs:{id:"监视数据更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#监视数据更新"}},[t._v("#")]),t._v(" 监视数据更新")]),t._v(" "),e("h3",{attrs:{id:"数据劫持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据劫持"}},[t._v("#")]),t._v(" 数据劫持")]),t._v(" "),e("p",[t._v("new Vue(new VueComponent) 时，遍历 data 通过 Object.defineProperty()，添加set和get(目的:数据发生改变从新解析模板(或者rander方法)生成新的虚dom，对比虚拟 dom 更新页面)")]),t._v(" "),e("h3",{attrs:{id:"数据代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据代理"}},[t._v("#")]),t._v(" 数据代理")]),t._v(" "),e("p",[t._v("将劫持后的数据赋值给 vm._data 上，再利用 Object.defineProperty()，将 vm._data，代理到 vm 上，(相当于 vm.xx === vm._data.xx)")]),t._v(" "),e("h2",{attrs:{id:"对象和数组的监视"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象和数组的监视"}},[t._v("#")]),t._v(" 对象和数组的监视")]),t._v(" "),e("h2",{attrs:{id:"对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),e("p",[t._v("data中对象数据在new Vue(new VueComponent) 时，递归遍历属性，给属性或者属性内部属性都添加set，get，新添加的属性需要使用vue.set添加监视，或者重新赋值对象。")]),t._v(" "),e("h2",{attrs:{id:"数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),e("p",[t._v("data中数组，在new Vue(new VueComponent) 时一样递归添加set和get，但是set，是对数组进行方法包装只有调用push，shift，unshift，pop，reverse，sort，才能触发模板编译，但数组内部的对象，同data中的对象一样的修改方式，改变数组也可以使用 vue.set，或者从新赋值数组")])])}),[],!1,null,null,null);e.default=s.exports}}]);