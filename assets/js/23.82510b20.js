(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{420:function(a,t,s){"use strict";s.r(t);var e=s(2),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[a._v("#")]),a._v(" config")]),a._v(" "),t("p",[a._v("git 全局配置文件在 ~ 目录下 .gitconfig 文件\ngit 项目配置文件在 项目目录下 .git 文件夹下 config 文件")]),a._v(" "),t("h2",{attrs:{id:"remote-远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remote-远程仓库"}},[a._v("#")]),a._v(" remote 远程仓库")]),a._v(" "),t("h3",{attrs:{id:"git-远程分支详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-远程分支详解"}},[a._v("#")]),a._v(" git 远程分支详解")]),a._v(" "),t("p",[a._v("参考"),t("a",{attrs:{href:"https://blog.csdn.net/weixin_39616416/article/details/111160820",target:"_blank",rel:"noopener noreferrer"}},[a._v("Git refspec与远程分支的重要操作"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"查看本地关联的远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看本地关联的远程仓库"}},[a._v("#")]),a._v(" 查看本地关联的远程仓库")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 远程仓库名  远程仓库地址")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# origin  https://github.com/xxx/my-blog.git (fetch)")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# origin  https://github.com/xxx/my-blog.git (push)")]),a._v("\n")])])]),t("h3",{attrs:{id:"本地设置远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地设置远程仓库"}},[a._v("#")]),a._v(" 本地设置远程仓库")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  git remote add （添加远程仓库） origin（远程仓库名随便起） https://github.com/xxx/my-blog.git （远程仓库地址）")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin https://github.com/xxx/my-blog.git\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#  git push 推送代码 -u 同时为当前推送设置上游分支  origin master （origin 就是上面起的远程仓库名 master 分支名）")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" origin master\n")])])]),t("h3",{attrs:{id:"修改远程仓库地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改远程仓库地址"}},[a._v("#")]),a._v(" 修改远程仓库地址")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# git remote set-url origin（远程仓库名） https://github.com/xxx/my-blog1.git （远程仓库地址）")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote set-url origin https://github.com/xxx/my-blog1.git\n\n")])])]),t("h2",{attrs:{id:"查看-git-未推送的提交记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看-git-未推送的提交记录"}},[a._v("#")]),a._v(" 查看 GIT 未推送的提交记录")]),a._v(" "),t("h4",{attrs:{id:"_1-查看到未传送到远程代码库的提交次数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看到未传送到远程代码库的提交次数"}},[a._v("#")]),a._v(" 1 查看到未传送到远程代码库的提交次数")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status\n")])])]),t("p",[a._v("显示结果类似于这样：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status\nOn branch master\nYour branch is ahead of "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'origin/master'")]),a._v(" by "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" commits.\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("use "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"git push"')]),a._v(" to publish your "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("local")]),a._v(" commits"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\nnothing to commit, working tree clean\n")])])]),t("h4",{attrs:{id:"_2-查看到未传送到远程代码库的提交描述-说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-查看到未传送到远程代码库的提交描述-说明"}},[a._v("#")]),a._v(" 2 查看到未传送到远程代码库的提交描述/说明")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cherry "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v("\n")])])]),t("p",[a._v("显示结果类似于这样：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("+ afd5134be3bee5285d6c2ee2c82fc323012d74bb Update commit "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n+ 37a165ec0586f4af745bf538bc139fda6f1df672 Update commit "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n")])])]),t("h4",{attrs:{id:"_3-查看到未传送到远程代码库的提交详情"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-查看到未传送到远程代码库的提交详情"}},[a._v("#")]),a._v(" 3 查看到未传送到远程代码库的提交详情")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log master ^origin/master\n")])])]),t("p",[a._v("这是一个 git log 命令的过滤，^origin/master 可改成其它分支。\n显示结果类似于这样：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("commit 37a165ec0586f4af745bf538bc139fda6f1df672 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("HEAD -"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" master"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nAuthor: xxxx "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("xxxxx@163.com"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\nDate:   Mon Jul "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("26")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("17")]),a._v(":46:34 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2021")]),a._v(" +0800\n\n    Update commit "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n\ncommit afd5134be3bee5285d6c2ee2c82fc323012d74bb\nAuthor: xxx "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("xxxx@163.com"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\nDate:   Mon Jul "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("26")]),a._v(" 09:54:24 "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2021")]),a._v(" +0800\n\n    Update commit "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("\n")])])]),t("p",[a._v("总结\ngit status 只能查看未传送提交的次数\ngit cherry -v 只能查看未传送提交的描述/说明\ngit log master ^origin/master 则可以查看未传送提交的详细信息")]),a._v(" "),t("h2",{attrs:{id:"github-相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github-相关"}},[a._v("#")]),a._v(" Github 相关")]),a._v(" "),t("p",[a._v("新建仓库")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"# test111"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" README.md\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" init\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" README.md\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"first commit"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-M")]),a._v(" main\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin https://github.com/bitbw/test111.git\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" origin main\n")])])]),t("p",[a._v("已有仓库")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin https://github.com/bitbw/test111.git\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-M")]),a._v(" main\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" origin main\n")])])]),t("h2",{attrs:{id:"git设置代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git设置代理"}},[a._v("#")]),a._v(" git设置代理")]),a._v(" "),t("h3",{attrs:{id:"设置局部代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置局部代理"}},[a._v("#")]),a._v(" 设置局部代理")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--local")]),a._v(" http.proxy "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),a._v(".0.1:1080\n")])])]),t("h3",{attrs:{id:"端口要设置为本地代理的端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#端口要设置为本地代理的端口"}},[a._v("#")]),a._v(" 端口要设置为本地代理的端口")]),a._v(" "),t("h3",{attrs:{id:"设置全局代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置全局代理"}},[a._v("#")]),a._v(" 设置全局代理")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" http.proxy "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),a._v(".0.1:1080\n")])])]),t("p",[a._v("为全局的 git 项目都设置代理")]),a._v(" "),t("p",[a._v("取消代理设置")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--local")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--unset")]),a._v(" http.proxy\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--unset")]),a._v(" http.proxy\n")])])]),t("h3",{attrs:{id:"git-clone-同时设置代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-clone-同时设置代理"}},[a._v("#")]),a._v(" git clone 同时设置代理")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("http.proxy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://127.0.0.1:1080  https://github.com/xxx.git\n")])])]),t("p",[a._v("设置快捷别名")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.cloneProxy "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" clone "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-c")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("http.proxy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://127.0.0.1:1080\n")])])]),t("h2",{attrs:{id:"git-大小写问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-大小写问题"}},[a._v("#")]),a._v(" git 大小写问题")]),a._v(" "),t("p",[a._v("问题复现:")]),a._v(" "),t("ol",[t("li",[a._v(".新建一个 a.js 文件(大小写不敏感的状态下)，并提交")]),a._v(" "),t("li",[a._v(".修改本地 a.js 变为 A.js，文件内容无变更，无法提交")]),a._v(" "),t("li",[a._v("执行git config core.ignorecase false，修改 大小写敏感 规则，然后提交，查看结果，此时会存在 大小写 同时存在的文件")]),a._v(" "),t("li",[a._v("此时某种机缘下，再次执行 git config core.ignorecase true，大小写不敏感，")]),a._v(" "),t("li",[a._v("此时执行 git push ， 即把最新的更新都更新到了 a.js 中")]),a._v(" "),t("li",[a._v("此时再修改 大小写敏感规则为敏感， 执行 git pull ，并不会拿到最新的更新。比如自己想要的是第一次修改后的 A.js ，但是服务器有一个没7. 有更新的 A.js 和 有更新的 a.js,而你只能拿到前者，所以就会遇到各种各样的坑……")])]),a._v(" "),t("h3",{attrs:{id:"解决办法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[a._v("#")]),a._v(" 解决办法")]),a._v(" "),t("p",[a._v("执行git config --global core.ignorecase false，全局设置 大小写敏感 。")]),a._v(" "),t("ol",[t("li",[a._v("文件变更比较少的情况\n直接使用以下命令重命名文件，在 git 中不要直接修改文件名，最好的办法是使用下面的方式，")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("你想要删掉的文件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("你想要留下的文件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" a.js A.js\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 等同于：")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" a.js\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" A.js\n")])])]),t("p",[a._v("这个命令的目的就是删除不需要的大小写同名文件，修改后 git push 提交变更即可。")]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("变更比较多，并且拥有分支较高权限")])]),a._v(" "),t("ul",[t("li",[a._v("在 github 删除该分支")]),a._v(" "),t("li",[a._v("本地执行 git rm -r --cached . (注意后面‘点号’)")]),a._v(" "),t("li",[a._v("然后重新 git push，就ok了\n此法不太好，有点暴力，容易出问题，但适用于 变更发生于近期的情况。")])]),a._v(" "),t("p",[a._v("总结：\n其实看解决办法的话，只是一个很小的问题，但是出现的 bug 确实是让人很头疼的，因为 mac windows 在不设置大小写敏感规则的时候默认大小写是不敏感，项目部署的机器是 Linux 的，而 Linux 是大小写敏感的。所以这样的问题平时不易发现，本地调试的时候大部分时候并不会出错误，只有在项目部署的时候问题才会显示出来。")]),a._v(" "),t("h2",{attrs:{id:"git-push同时推送到两个远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-push同时推送到两个远程仓库"}},[a._v("#")]),a._v(" git push同时推送到两个远程仓库")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.jianshu.com/p/edc85a20ada9",target:"_blank",rel:"noopener noreferrer"}},[a._v("原文地址"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("进入你的项目目录，打开.git/config文件(.git是隐藏目录，需要打开显示隐藏文件…)")]),a._v(" "),t("p",[a._v("在url = xxx下再加一行其他远程库的路径，例如，开源中国的：")]),a._v(" "),t("p",[a._v("此后，你只需要git push origin master，即可同时推送到两个不同仓库的master。")]),a._v(" "),t("h2",{attrs:{id:"git-别名配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-别名配置"}},[a._v("#")]),a._v(" git 别名配置")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.co checkout\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.br branch\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.ci commit\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--global")]),a._v(" alias.st status\n")])])]),t("h2",{attrs:{id:"git-根据用户名统和时间查看代码统计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-根据用户名统和时间查看代码统计"}},[a._v("#")]),a._v(" git 根据用户名统和时间查看代码统计")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.csdn.net/tags/OtTaEg4sNzU1NC1ibG9n.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考:git 时间 查看代码统计"),t("OutboundLink")],1),a._v(" "),t("a",{attrs:{href:"https://blog.csdn.net/fsjwin/article/details/122267764",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考:gitlab代码查看行数"),t("OutboundLink")],1),a._v(" "),t("a",{attrs:{href:"https://www.csdn.net/tags/MtjaYg3sNjE1NTMtYmxvZwO0O0OO0O0O.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考:git log排除文件"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 代码量统计")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 说明 \":(exclude)nouse\" 为需要排除的文件  -- since开始时间 --until 结束时间   git log '分支名称'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%aN'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sort")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-u")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("read")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-en")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$name")]),t("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[a._v("\\t")]),a._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'bowen'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--author")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$name")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--since")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2022")]),a._v("-02-07 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--until")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2022")]),a._v("-8-15 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pretty")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("tformat: "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--numstat")]),a._v("  -- "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('":(exclude)nouse_backup"')]),a._v("  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('":(exclude)package-lock.json"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('":(exclude)yarn.lock"')]),a._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("awk")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{ add += $1; subs += $2; loc += $1 - $2 } END { printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc }'")]),a._v(" -"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),t("h2",{attrs:{id:"git-worktree-的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-worktree-的使用"}},[a._v("#")]),a._v(" git worktree 的使用")]),a._v(" "),t("p",[a._v("参考 "),t("a",{attrs:{href:"https://www.cnblogs.com/jasongrass/p/11178079.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("git worktree 使用笔记"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"工作模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作模式"}},[a._v("#")]),a._v(" 工作模式")]),a._v(" "),t("ul",[t("li",[a._v("worktree add 新的文件夹")]),a._v(" "),t("li",[a._v("打开的文件夹下载依赖后修改")]),a._v(" "),t("li",[a._v("测试没问题后  git push -u origin HEAD:目标分支")]),a._v(" "),t("li",[a._v("删除新的文件夹  git worktree prune 清理")])]),a._v(" "),t("h3",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[a._v("#")]),a._v(" 注意事项")]),a._v(" "),t("p",[a._v("worktree 不允许两个 worktree 使用同一个分支。如果有这个需要怎么办？")]),a._v(" "),t("ul",[t("li",[a._v("新建一个分支，reset 到目标分支，再基于这个新分支工作，效果一样。")]),a._v(" "),t("li",[a._v("新建一个分支，使用 git push -u origin HEAD:目标分支， 目标分支再 pull")])]),a._v(" "),t("p",[a._v("使用后不使再用的 worktree 删除后 ，运行 git worktree prune 清理")])])}),[],!1,null,null,null);t.default=r.exports}}]);