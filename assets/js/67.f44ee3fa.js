(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{465:function(e,r,v){"use strict";v.r(r);var _=v(2),o=Object(_.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"相等运算符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相等运算符"}},[e._v("#")]),e._v(" 相等运算符 ( ==)")]),e._v(" "),r("p",[e._v("== 相等运算符在判断相等前对两边的变量（如果它们不是同一类型）进行强制转换")]),e._v(" "),r("ol",[r("li",[e._v("如果操作数具有相同的类型，则按如下方式进行比较：\n"),r("ul",[r("li",[e._v("对象："),r("code",[e._v("true")]),e._v("仅当两个操作数都引用同一个对象时才返回。")]),e._v(" "),r("li",[e._v("字符串："),r("code",[e._v("true")]),e._v("仅当两个操作数具有相同顺序的相同字符时才返回。")]),e._v(" "),r("li",[e._v("数字："),r("code",[e._v("true")]),e._v("仅当两个操作数具有相同值时才返回。"),r("code",[e._v("+0")]),e._v("并被"),r("code",[e._v("-0")]),e._v("视为相同的值。如果任一操作数是"),r("code",[e._v("NaN")]),e._v("，则返回"),r("code",[e._v("false")]),e._v("；所以，"),r("code",[e._v("NaN")]),e._v("永远不等于"),r("code",[e._v("NaN")]),e._v("。")]),e._v(" "),r("li",[e._v("布尔值："),r("code",[e._v("true")]),e._v("仅当操作数为 both"),r("code",[e._v("true")]),e._v("或 both时才返回"),r("code",[e._v("false")]),e._v("。")]),e._v(" "),r("li",[e._v("BigInt："),r("code",[e._v("true")]),e._v("仅当两个操作数具有相同值时才返回。")]),e._v(" "),r("li",[e._v("符号："),r("code",[e._v("true")]),e._v("仅当两个操作数引用相同的符号时才返回。")])])]),e._v(" "),r("li",[e._v("如果其中一个操作数是"),r("code",[e._v("null")]),e._v("or "),r("code",[e._v("undefined")]),e._v("，则另一个也必须是"),r("code",[e._v("null")]),e._v("or"),r("code",[e._v("undefined")]),e._v("才能返回"),r("code",[e._v("true")]),e._v("。否则返回"),r("code",[e._v("false")]),e._v("。")]),e._v(" "),r("li",[e._v("如果其中一个操作数是对象而另一个是基元，则按该顺序使用对象的"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("@@toPrimitive()")]),r("OutboundLink")],1),e._v("（带有"),r("code",[e._v('"default"')]),e._v("提示）"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("valueOf()")]),r("OutboundLink")],1),e._v("、、和"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("toString()")]),r("OutboundLink")],1),e._v("方法将对象转换为基元。（这个原语转换和"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Addition",target:"_blank",rel:"noopener noreferrer"}},[e._v("另外"),r("OutboundLink")],1),e._v("使用的一样。）")]),e._v(" "),r("li",[e._v("在这一步，两个操作数都被转换为原语（String、Number、Boolean、Symbol 和 BigInt 之一）。其余的转换是逐案完成的。\n"),r("ul",[r("li",[e._v("如果它们属于同一类型，请使用步骤 1 进行比较。")]),e._v(" "),r("li",[e._v("如果其中一个操作数是 Symbol 而另一个不是，则返回"),r("code",[e._v("false")]),e._v("。")]),e._v(" "),r("li",[e._v("如果其中一个操作数是布尔值，而另一个不是，则将布尔值转换为数字："),r("code",[e._v("true")]),e._v("转换为 1，然后"),r("code",[e._v("false")]),e._v("转换为 0。然后再次松散地比较两个操作数。")]),e._v(" "),r("li",[e._v("数字转字符串：使用与构造函数相同的算法将字符串转换为数字"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/Number",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("Number()")]),r("OutboundLink")],1),e._v("。将导致转换失败"),r("code",[e._v("NaN")]),e._v("，这将保证相等"),r("code",[e._v("false")]),e._v("。")]),e._v(" "),r("li",[e._v("Number to BigInt：比较它们的数值。如果数字是 ±Infinity 或"),r("code",[e._v("NaN")]),e._v("，则返回"),r("code",[e._v("false")]),e._v("。")]),e._v(" "),r("li",[e._v("String to BigInt：使用与构造函数相同的算法将字符串转换为 BigInt "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/BigInt",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("BigInt()")]),r("OutboundLink")],1),e._v("。如果转换失败，则返回"),r("code",[e._v("false")]),e._v("。")])])])]),e._v(" "),r("p",[e._v("松散相等是"),r("em",[e._v("对称")]),e._v("的：对于and的任何值"),r("code",[e._v("A == B")]),e._v("总是具有相同的语义（应用转换的顺序除外）。"),r("code",[e._v("B == A``A``B")])]),e._v(" "),r("h3",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),r("ul",[r("li",[e._v("类型相同 对象和符号比地址 其他都比值 ,数字比较特殊 +0 和 -0 相等 ，NaN 和 NaN 永远不相等")]),e._v(" "),r("li",[e._v("类型不同 都尝试转化为数字类型在比较(如果一次无法转化到位就两次)，object 会依次调用 valueOf()  toString() 获取值， 但是有两种特殊情况\n"),r("ul",[r("li",[e._v("String to BigInt 字符串转换为 BigInt , Number to BigInt 直接比较 ,数字是 ±Infinity 或"),r("code",[e._v("NaN")]),e._v("，则返回"),r("code",[e._v("false")])]),e._v(" "),r("li",[e._v("其中一个操作数是 Symbol 而另一个不是，则返回"),r("code",[e._v("false")])])])])]),e._v(" "),r("h2",{attrs:{id:"严格相等运算符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#严格相等运算符"}},[e._v("#")]),e._v(" 严格相等运算符 (===)")]),e._v(" "),r("p",[e._v("严格相等运算符 ( "),r("code",[e._v("===")]),e._v(") 检查它的两个操作数是否相等，返回一个布尔结果。与"),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality",target:"_blank",rel:"noopener noreferrer"}},[e._v("相等"),r("OutboundLink")],1),e._v("运算符不同，严格相等运算符始终认为不同类型的操作数是不同的。")]),e._v(" "),r("ul",[r("li",[e._v("如果操作数的类型不同，则返回"),r("code",[e._v("false")]),e._v("。")]),e._v(" "),r("li",[e._v("如果两个操作数都是对象，"),r("code",[e._v("true")]),e._v("则仅当它们引用同一个对象时才返回。")]),e._v(" "),r("li",[e._v("如果两个操作数都是"),r("code",[e._v("null")]),e._v("或两个操作数都是"),r("code",[e._v("undefined")]),e._v("，则返回"),r("code",[e._v("true")]),e._v("。")]),e._v(" "),r("li",[e._v("如果任一操作数是"),r("code",[e._v("NaN")]),e._v("，则返回"),r("code",[e._v("false")]),e._v("。")]),e._v(" "),r("li",[e._v("否则，比较两个操作数的值：\n"),r("ul",[r("li",[e._v("数字必须具有相同的数值。"),r("code",[e._v("+0")]),e._v("并且"),r("code",[e._v("-0")]),e._v(" 被认为是相同的值。")]),e._v(" "),r("li",[e._v("字符串必须以相同的顺序具有相同的字符。")]),e._v(" "),r("li",[e._v("布尔值必须是两者"),r("code",[e._v("true")]),e._v("或两者"),r("code",[e._v("false")]),e._v("。")])])])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Equality",target:"_blank",rel:"noopener noreferrer"}},[e._v("此运算符与等式"),r("OutboundLink")],1),e._v(" ( ) 运算符 之间最显着的区别在于"),r("code",[e._v("==")]),e._v("，如果操作数属于不同类型，则 "),r("code",[e._v("==")]),e._v("运算符会在比较之前尝试将它们转换为相同类型。")]),e._v(" "),r("h2",{attrs:{id:"object-is"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#object-is"}},[e._v("#")]),e._v(" Object.is()")]),e._v(" "),r("p",[r("code",[e._v("Object.is()")]),e._v(" 方法判断两个值是否为"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness",target:"_blank",rel:"noopener noreferrer"}},[e._v("同一个值"),r("OutboundLink")],1),e._v("，如果满足以下任意条件则两个值相等：")]),e._v(" "),r("ul",[r("li",[e._v("都是 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("undefined")]),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("都是 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/null",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("null")]),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("都是 "),r("code",[e._v("true")]),e._v(" 或都是 "),r("code",[e._v("false")])]),e._v(" "),r("li",[e._v("都是相同长度、相同字符、按相同顺序排列的字符串")]),e._v(" "),r("li",[e._v("都是相同对象（意味着都是同一个对象的值引用）")]),e._v(" "),r("li",[e._v("都是数字且\n"),r("ul",[r("li",[e._v("都是 "),r("code",[e._v("+0")])]),e._v(" "),r("li",[e._v("都是 "),r("code",[e._v("-0")])]),e._v(" "),r("li",[e._v("都是 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("NaN")]),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("都是同一个值，非零且都不是 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("NaN")]),r("OutboundLink")],1)])])])]),e._v(" "),r("p",[r("code",[e._v("Object.is()")]),e._v(" 与 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators#%E7%9B%B8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("==")]),r("OutboundLink")],1),e._v(" 不同。"),r("code",[e._v("==")]),e._v(" 运算符在判断相等前对两边的变量（如果它们不是同一类型）进行强制转换（这种行为将 "),r("code",[e._v('"" == false')]),e._v(" 判断为 "),r("code",[e._v("true")]),e._v("），而 "),r("code",[e._v("Object.is")]),e._v(" 不会强制转换两边的值。")]),e._v(" "),r("p",[r("code",[e._v("Object.is()")]),e._v(" 与 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators#%E5%85%A8%E7%AD%89%E8%BF%90%E7%AE%97%E7%AC%A6",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("===")]),r("OutboundLink")],1),e._v(" 也不相同。差别是它们对待有符号的零和 NaN 不同，例如，"),r("code",[e._v("===")]),e._v(" 运算符（也包括 "),r("code",[e._v("==")]),e._v(" 运算符）将数字 "),r("code",[e._v("-0")]),e._v(" 和 "),r("code",[e._v("+0")]),e._v(" 视为相等，而将 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("Number.NaN")]),r("OutboundLink")],1),e._v(" 与 "),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/NaN",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("NaN")]),r("OutboundLink")],1),e._v(" 视为不相等。")]),e._v(" "),r("h3",{attrs:{id:"总结-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),r("p",[r("code",[e._v("Object.is()")]),e._v(" 在 undefined 与 null 与 Object 和 基本数据类型的处理上与 "),r("code",[e._v("===")]),e._v(" 操作符一致，不会强制类型转化")]),e._v(" "),r("p",[e._v("特殊点")]),e._v(" "),r("ul",[r("li",[e._v("+0 和 -0 不等")]),e._v(" "),r("li",[e._v("NaN 和 NaN 相等")])])])}),[],!1,null,null,null);r.default=o.exports}}]);